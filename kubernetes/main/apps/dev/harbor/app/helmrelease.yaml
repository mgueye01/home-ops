---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: harbor
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: harbor
      version: 1.15.1
      sourceRef:
        kind: HelmRepository
        name: harbor-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    logLevel: debug
    externalURL: "https://harbor.g-eye.io"
    existingSecretAdminPassword: &secret harbor-secret
    expose:
      type: ingress
      ingress:
        controller: default
        className: internal
        hosts:
          core: harbor.g-eye.io
        annotations:
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          nginx.ingress.kubernetes.io/custom-http-errors: "418"
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "480"
      tls:
        # The ingress controller has a default certificate so we don't need to configure it
        certSource: none
    persistence:
      enabled: true
      persistentVolumeClaim:
        registry:
          existingClaim: "harbor-registry"
        chartmuseum:
          existingClaim: "harbor-chartmuseum"
        jobservice:
          jobLog:
            existingClaim: "harbor-jobservice"
          scanDataExports:
            existingClaim: "harbor-jobservice-scandata"
        trivy:
          existingClaim: "harbor-trivy"
    database:
      type: external
      external:
        host: postgres16-rw.database.svc.cluster.local
        port: "5432"
        username: harbor
        existingSecret: *secret
    redis:
      type: external
      external:
        sentinelMasterSet: redis-master
        addr: "redis-node-0.redis-headless.database.svc.cluster.local:26379,redis-node-1.redis-headless.database.svc.cluster.local:26379,redis-node-2.redis-headless.database.svc.cluster.local:26379"
        coreDatabaseIndex: "0"
        jobserviceDatabaseIndex: "1"
        registryDatabaseIndex: "2"
        trivyAdapterIndex: "5"
        harborDatabaseIndex: "6"
        cacheLayerDatabaseIndex: "7"
        username: ""
        password: ""
    exporter:
      replicas: 1
      revisionHistoryLimit: 10
    metrics:
      enabled: true
      core:
        path: /metrics
        port: 8001
      registry:
        path: /metrics
        port: 8001
      jobservice:
        path: /metrics
        port: 8001
      exporter:
        path: /metrics
        port: 8001
    serviceMonitor:
      enabled: true
