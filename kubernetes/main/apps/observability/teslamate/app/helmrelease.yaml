---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: teslamate
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      teslamate:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: teslamate-secret
        containers:
          app:
            env:
              CHECK_ORIGIN: true
              DATABASE_HOST: postgres16-rw.database.svc.cluster.local
              MQTT_HOST: &mqttHost mosquitto.default.svc.cluster.local
              PORT: &port 80
              TZ: &TZ "Europe/Paris"
              VIRTUAL_HOST: "{{ .Release.Name }}.g-eye.io"
            envFrom: *envFrom
            image:
              repository: teslamate/teslamate
              tag: 1.30.1
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              limits:
                memory: 512Mi
              requests:
                cpu: 25m
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
          api:
            env:
              DATABASE_HOST: postgres16-ro.database.svc.cluster.local
              ENABLE_COMMANDS: "false"
              COMMANDS_ALL: "false"
              MQTT_HOST: *mqttHost
              TZ: *TZ
              TESLAMATE_HOST: &host "{{ .Release.Name }}.g-eye.io"
            envFrom: *envFrom
            image:
              repository: ghcr.io/tobiasehlert/teslamateapi
              tag: 1.18.3@sha256:f4e7e601cc99eac9290b2e1b8e1fa1e4b701ba505d9e48363cce08f596c6e87d
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/ping
                    port: &apiPort 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              limits:
                memory: 256Mi
              requests:
                cpu: 10m
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
        pod:
          automountServiceAccountToken: false
          securityContext:
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10000
            seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: teslamate
        type: ClusterIP
        ports:
          http:
            port: 4000
    ingress:
      app:
        className: internal
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
              - path: /api
                service:
                  identifier: api
                  port: http
        tls:
          - hosts:
              - *host
      api:
        controller: main
        ports:
          http:
            port: *apiPort
