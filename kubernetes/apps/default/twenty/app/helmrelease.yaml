---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app twenty
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      twenty:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
            envFrom: &envFrom
              - secretRef:
                  name: twenty-secret
        containers:
          app:
            image:
              repository: twentycrm/twenty
              tag: latest
            env:
              NODE_PORT: &port 3000
              SERVER_URL: "https://twenty.g-eye.io"
              SIGN_IN_PREFILLED: "false"
              STORAGE_TYPE: "local"
              ACCESS_TOKEN_EXPIRES_IN: "7d"
              LOGIN_TOKEN_EXPIRES_IN: "1h"
              DISABLE_DB_MIGRATIONS: "false"
              PG_DATABASE_URL: "postgres://$(TWENTY_POSTGRES_USER):$(TWENTY_POSTGRES_PASS)@postgres16-rw.databases.svc.cluster.local:5432/$(TWENTY_POSTGRES_DB)"
              REDIS_URL: "redis://redis-master.databases.svc.cluster.local:6379"
              TIMEZONE: "Europe/Paris"
            envFrom: *envFrom
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: *port
                  initialDelaySeconds: 30
                  periodSeconds: 30
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /readyz
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: *port
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 30
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 250m
                memory: 256Mi
              limits:
                memory: 1Gi
                cpu: 1000m
      twenty-worker:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: twentycrm/twenty
              tag: latest
            command: ["yarn", "worker:prod"]
            env:
              SERVER_URL: "https://twenty.g-eye.io"
              STORAGE_TYPE: "local"
              DISABLE_DB_MIGRATIONS: "false"
              PG_DATABASE_URL: "postgres://$(TWENTY_POSTGRES_USER):$(TWENTY_POSTGRES_PASS)@postgres16-rw.databases.svc.cluster.local:5432/$(TWENTY_POSTGRES_DB)"
              REDIS_URL: "redis://redis-master.databases.svc.cluster.local:6379"
              TIMEZONE: "Europe/Paris"
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 250m
                memory: 1Gi
              limits:
                memory: 2Gi
                cpu: 1000m
        pod:
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
            runAsNonRoot: true
    service:
      app:
        controller: twenty
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - "twenty.g-eye.io"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      data:
        existingClaim: twenty
        globalMounts:
          - path: /app/data
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      docker-data:
        type: emptyDir
        globalMounts:
          - path: /app/.docker-data
