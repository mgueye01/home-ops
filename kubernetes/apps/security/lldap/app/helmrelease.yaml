---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lldap
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      lldad:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
            envFrom: &envFrom
              - secretRef:
                  name: lldap-secret
        containers:
          main:
            image:
              repository: ghcr.io/lldap/lldap
              tag: 2024-01-05-alpine-rootless
            env:
              TZ: Europe/Paris
              LLDAP_HTTP_PORT: &port 80
              LLDAP_HTTP_URL: https://lldap.g-eye.io
              LLDAP_LDAP_PORT: &ldapPort 389
              LLDAP_LDAP_BASE_DN: dc=home,dc=arpa
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
    service:
      app:
        controller: lldad
        ports:
          http:
            port: *port
          ldap:
            port: *ldapPort
    route:
      app:
        annotations:
          gatus.home-operations.com/enabled: "true"
          gatus.home-operations.com/endpoint: |-
            conditions: ["len([BODY]) == 0"]
            dns:
              query-name: {{ .Release.Name }}.g-eye.io
              query-type: A
            url: 1.1.1.1
        enabled: true
        hostnames:
          - "{{ .Release.Name }}.g-eye.io"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      data:
        type: emptyDir
